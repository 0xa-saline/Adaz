- name: Ensure Kibana folder exists
  file:
    path: /opt/kibana
    state: directory

- name: Download and extract Kibana
  unarchive:
    src: https://artifacts.elastic.co/downloads/kibana/kibana-7.7.0-linux-x86_64.tar.gz
    remote_src: yes
    dest: /opt/kibana
    extra_opts: [--strip-components=1]
    creates: /opt/kibana/bin/kibana

- name: Ensure Kibana systemd service definition exists
  template:
    src: ./templates/kibana.service
    dest: /etc/systemd/system/kibana.service

- name: Ensure Kibana configuration is set
  template:
    src: ./templates/kibana.yml
    dest: /opt/kibana/config/kibana.yml
  notify: restart kibana

- name: Ensure Kibana service is started and enabled
  systemd:
    name: kibana
    state: started
    daemon_reload: yes

- name: Ensure Kibana port is reachable
  wait_for:
    port: 5601

- name: List Kibana index templates
  uri:
    url: http://127.0.0.1:5601/api/saved_objects/_find?fields=title&per_page=100&type=index-pattern
    return_content: yes
  register: index_patterns
  until: index_patterns.content != "Kibana server is not ready yet" and index_patterns.status == 200 # Initially, need to wait a bit until the server is ready
  retries: 100
  delay: 5

- name: Create Kibana index template for winlogbeat
  uri:
    url: http://127.0.0.1:5601/api/saved_objects/index-pattern
    method: POST
    body: '{"attributes":{"title":"winlogbeat-*","timeFieldName":"@timestamp","fields":"[]" }}'
    body_format: json
    headers: {'kbn-xsrf': 'kibana'}
  when: index_patterns.json.saved_objects|length == 0  